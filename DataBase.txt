------------------ For MYSQL: -----------------------

CREATE DATABASE student_managementsystem;         

USE student_managementsystem;

CREATE TABLE Course (
    CourseID INT PRIMARY KEY,
    Credits INT,
    CourseTitle VARCHAR(255)
);

CREATE TABLE Instructor (
    InstructorID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100)
);

CREATE TABLE Student (
    StudentID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    DOB DATE,
    Gender CHAR(1),
    Email VARCHAR(100),
    Phone VARCHAR(20)
);

CREATE TABLE Enrollment (
    EnrollmentID INT PRIMARY KEY,
    InstructorID INT,
    EnrollmentDate DATE,
    StudentID INT,
    CourseID INT,
    FOREIGN KEY (InstructorID) REFERENCES instructor (InstructorID),
    FOREIGN KEY (StudentID) REFERENCES student (StudentID),
    FOREIGN KEY (CourseID) REFERENCES course (CourseID)
);

CREATE TABLE Feedback (
    FeedbackID INT PRIMARY KEY,
    StudentID INT,
    InstructorName VARCHAR(100),
    Feedback TEXT,
    Date DATE,
    FOREIGN KEY (StudentID) REFERENCES student (StudentID)
);

CREATE TABLE Score (
    ScoreID INT PRIMARY KEY,
    StudentID INT,
    CourseID INT,
    DateOfExam DATE;
    CreditObtained DECIMAL(5, 2),  -- You can adjust the data type as needed for scores
    FOREIGN KEY (StudentID) REFERENCES student (StudentID),
    FOREIGN KEY (CourseID) REFERENCES course (CourseID)
);


-- Dummy data for each TABLE


-- Dummy data for the course table
INSERT INTO Course (CourseID, Credits, CourseTitle)
VALUES
    (1, 3, 'Introduction to Programming'),
    (2, 4, 'Database Management'),
    (3, 3, 'Web Development'),
    (4, 3, 'Data Structures and Algorithms'),
    (5, 4, 'Machine Learning Fundamentals'),
    (6, 3, 'Introduction to JavaScript'),
    (7, 4, 'Database Design'),
    (8, 3, 'Web Design Principles');


-- Dummy data for the instructor table
INSERT INTO Instructor (InstructorID, FirstName, LastName, Email)
VALUES
    (101, 'John', 'Doe', 'john.doe@example.com'),
    (102, 'Jane', 'Smith', 'jane.smith@example.com'),
	(103, 'Michael', 'Wilson', 'michael@example.com'),
    (104, 'Sarah', 'Brown', 'sarah@example.com'),
    (105, 'David', 'Clark', 'david@example.com');

-- Dummy data for the student table
INSERT INTO Student (StudentID, FirstName, LastName, DOB, Gender, Email, Phone)
VALUES
    (1001, 'Alice', 'Johnson', '1995-05-15', 'F', 'alice@example.com', '123-456-7890'),
    (1002, 'Bob', 'Smith', '1997-08-22', 'M', 'bob@example.com', '987-654-3210'),
    (1003, 'Eva', 'Anderson', '1996-02-20', 'F', 'eva@example.com', '555-123-7890'),
    (1004, 'Chris', 'Lee', '1998-11-10', 'M', 'chris@example.com', '555-987-6543'),
    (1005, 'Olivia', 'Wilson', '1997-07-02', 'F', 'olivia@example.com', '555-777-8888');

-- Dummy data for the Enrollment table
INSERT INTO Enrollment (EnrollmentID, InstructorID, EnrollmentDate, StudentID, CourseID)
VALUES
    (2001, 101, '2023-09-01', 1001, 1),
    (2002, 102, '2023-09-05', 1002, 2),
	(2003, 103, '2023-09-08', 1003, 3),
    (2004, 104, '2023-09-12', 1004, 4),
    (2005, 105, '2023-09-15', 1005, 5);

-- Dummy data for the Feedback table
INSERT INTO Feedback (FeedbackID, StudentID, InstructorName, Feedback, Date)
VALUES
    (3001, 1001, 'John Doe', 'Great instructor!', '2023-09-10'),
    (3002, 1002, 'Jane Smith', 'Very informative course.', '2023-09-12'),
    (3003, 1003, 'Michael Wilson', 'Excellent teaching style!', '2023-09-18'),
    (3004, 1004, 'Sarah Brown', 'Engaging lectures.', '2023-09-20'),
    (3005, 1005, 'David Clark', 'Helpful instructor.', '2023-09-22');

-- Dummy data for the Score table
INSERT INTO Score (ScoreID, StudentID, CourseID, ScoreValue)
VALUES
    (4001, 1001, 1, 95.5),
    (4002, 1002, 2, 88.0),
	(4003, 1003, 3, 92.0),
    (4004, 1004, 4, 85.5),
    (4005, 1005, 5, 91.8);






------------------ For ORACLE: -----------------------

-- Below is only sample not checked please check before execution or handle error if it throws

-- Create a schema (user) if it doesn't exist
-- Replace 'your_schema' with your desired schema name
CREATE USER your_schema IDENTIFIED BY your_password;
GRANT CONNECT, RESOURCE TO your_schema;

-- Connect to the schema
CONNECT your_schema/your_password;

-- Create the course table
CREATE TABLE Course (
    CourseID NUMBER PRIMARY KEY,
    Credits NUMBER,
    CourseTitle VARCHAR2(255)
);

-- Create the instructor table
CREATE TABLE Instructor (
    InstructorID NUMBER PRIMARY KEY,
    FirstName VARCHAR2(50),
    LastName VARCHAR2(50),
    Email VARCHAR2(100)
);

-- Create the student table
CREATE TABLE Student (
    StudentID NUMBER PRIMARY KEY,
    FirstName VARCHAR2(50),
    LastName VARCHAR2(50),
    DOB DATE,
    Gender CHAR(1),
    Email VARCHAR2(100),
    Phone VARCHAR2(20)
);

-- Create the enrollment table
CREATE TABLE Enrollment (
    EnrollmentID NUMBER PRIMARY KEY,
    InstructorID NUMBER,
    EnrollmentDate DATE,
    StudentID NUMBER,
    CourseID NUMBER,
    CONSTRAINT fk_instructor FOREIGN KEY (InstructorID) REFERENCES Instructor (InstructorID),
    CONSTRAINT fk_student FOREIGN KEY (StudentID) REFERENCES Student (StudentID),
    CONSTRAINT fk_course FOREIGN KEY (CourseID) REFERENCES Course (CourseID)
);

-- Create the feedback table
CREATE TABLE Feedback (
    FeedbackID NUMBER PRIMARY KEY,
    StudentID NUMBER,
    InstructorName VARCHAR2(100),
    Feedback CLOB,
    Date DATE,
    CONSTRAINT fk_student_feedback FOREIGN KEY (StudentID) REFERENCES Student (StudentID)
);

-- Create the score table
CREATE TABLE Score (
    ScoreID NUMBER PRIMARY KEY,
    StudentID NUMBER,
    CourseID NUMBER,
    ScoreValue NUMBER(5, 2),  -- You can adjust the data type as needed for scores
    CONSTRAINT fk_student_score FOREIGN KEY (StudentID) REFERENCES Student (StudentID),
    CONSTRAINT fk_course_score FOREIGN KEY (CourseID) REFERENCES Course (CourseID)
);

-- Dummy data for the course table
INSERT INTO Course (CourseID, Credits, CourseTitle)
VALUES
    (1, 3, 'Introduction to Programming'),
    (2, 4, 'Database Management'),
    (3, 3, 'Web Development'),
    (4, 3, 'Data Structures and Algorithms'),
    (5, 4, 'Machine Learning Fundamentals'),
    (6, 3, 'Introduction to JavaScript'),
    (7, 4, 'Database Design'),
    (8, 3, 'Web Design Principles');

-- Dummy data for the instructor table
INSERT INTO Instructor (InstructorID, FirstName, LastName, Email)
VALUES
    (101, 'John', 'Doe', 'john.doe@example.com'),
    (102, 'Jane', 'Smith', 'jane.smith@example.com'),
    (103, 'Michael', 'Wilson', 'michael@example.com'),
    (104, 'Sarah', 'Brown', 'sarah@example.com'),
    (105, 'David', 'Clark', 'david@example.com');

-- Dummy data for the student table
INSERT INTO Student (StudentID, FirstName, LastName, DOB, Gender, Email, Phone)
VALUES
    (1001, 'Alice', 'Johnson', TO_DATE('1995-05-15', 'YYYY-MM-DD'), 'F', 'alice@example.com', '123-456-7890'),
    (1002, 'Bob', 'Smith', TO_DATE('1997-08-22', 'YYYY-MM-DD'), 'M', 'bob@example.com', '987-654-3210'),
    (1003, 'Eva', 'Anderson', TO_DATE('1996-02-20', 'YYYY-MM-DD'), 'F', 'eva@example.com', '555-123-7890'),
    (1004, 'Chris', 'Lee', TO_DATE('1998-11-10', 'YYYY-MM-DD'), 'M', 'chris@example.com', '555-987-6543'),
    (1005, 'Olivia', 'Wilson', TO_DATE('1997-07-02', 'YYYY-MM-DD'), 'F', 'olivia@example.com', '555-777-8888');

-- Dummy data for the Enrollment table
INSERT INTO Enrollment (EnrollmentID, InstructorID, EnrollmentDate, StudentID, CourseID)
VALUES
    (2001, 101, TO_DATE('2023-09-01', 'YYYY-MM-DD'), 1001, 1),
    (2002, 102, TO_DATE('2023-09-05', 'YYYY-MM-DD'), 1002, 2),
    (2003, 103, TO_DATE('2023-09-08', 'YYYY-MM-DD'), 1003, 3),
    (2004, 104, TO_DATE('2023-09-12', 'YYYY-MM-DD'), 1004, 4),
    (2005, 105, TO_DATE('2023-09-15', 'YYYY-MM-DD'), 1005, 5);

-- Dummy data for the Feedback table
INSERT INTO Feedback (FeedbackID, StudentID, InstructorName, Feedback, Date)
VALUES
    (3001, 1001, 'John Doe', 'Great instructor!', TO_DATE('2023-09-10', 'YYYY-MM-DD')),
    (3002, 1002, 'Jane Smith', 'Very informative course.', TO_DATE('2023-09-12', 'YYYY-MM-DD')),
    (3003, 1003, 'Michael Wilson', 'Excellent teaching style!', TO_DATE('2023-09-18', 'YYYY-MM-DD')),
    (3004, 1004, 'Sarah Brown', 'Engaging lectures.', TO_DATE('2023-09-20', 'YYYY-MM-DD')),
    (3005, 1005, 'David Clark', 'Helpful instructor.', TO_DATE('2023-09-22', 'YYYY-MM-DD'));

-- Dummy data for the Score table
INSERT INTO Score (ScoreID, StudentID, CourseID, ScoreValue)
VALUES
    (4001, 1001, 1, 95.5),
    (4002, 1002, 2, 88.0),
    (4003, 1003, 3, 92.0),
    (4004, 1004, 4, 85.5),
    (4005, 1005, 5, 91.8);

-- Commit the changes
COMMIT;
